- alias: Wake Me Up
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmstatus
      state: 'on'
    - condition: state
      entity_id: input_boolean.vacances
      state: 'off'
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
    - condition: state
      entity_id: calendar.jours_feries_en_france
      state: 'off'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: notify.notifier_seb
      data:
        message: "{{ ['Bonjour','Bonjour Monsieur','Monsieur'] | random }}, Il est l'heure de se lever. Il est {{ states.sensor.alarm_time.state }}. La température exterieure est de {{ states.sensor.yweather_temperature.state }} degrés, et il fait {{ states.sensor.forecast.state }}. {%- if states.sensor.maps_domicile_travail_seb.state | int < 14 -%}
 Il n'y a pas de monde sur la route pour aller au travail
{%- else -%}
 Attention la route est chargée il vous faudra {{ states.sensor.maps_domicile_travail_seb.state }} minutes pour aller au travail{%- endif %}."
 #   - service: light.turn_on
 #     entity_id:
 #       - light.chambreseb
 #     data:
 #       brightness: 10 
 #   - delay:
#        seconds: 30
 #   - service: light.turn_on
  #    entity_id:
 #       - light.chambreseb
 #     data:
 #       brightness: 15
 #   - delay:
#        seconds: 30
 #   - service: light.turn_on
 #     entity_id:
 #       - light.chambreseb
 #     data:
 #       brightness: 20 

